(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{445:function(a,t,s){"use strict";s.r(t);var r=s(14),n=Object(r.a)({},(function(){var a=this,t=a.$createElement,s=a._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[s("h1",{attrs:{id:"一、rabbitmq-介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#一、rabbitmq-介绍"}},[a._v("#")]),a._v(" 一、RabbitMQ 介绍")]),a._v(" "),s("h2",{attrs:{id:"_1-1-rabbitmq-是什么"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-1-rabbitmq-是什么"}},[a._v("#")]),a._v(" 1.1 RabbitMQ 是什么")]),a._v(" "),s("p",[a._v("RabbitMQ 是采用 Erlang 语言实现 AMQP（高级消息队列）的消息中间件，它最初起源于金融系统，用于在分布式系统中存储转发消息。\n​")]),a._v(" "),s("p",[a._v("RabbitMQ 发展到今天，被越来越多的人认可，这和它在易用性、扩展性、可靠性和高可用性等方面的卓著表现是分不开的。\nRabbitMQ 的具体特点可以概括为以下几点：")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("可靠性：")]),a._v(" RabbitMQ使用一些机制来保证消息的可靠性，如持久化、传输确认及发布确认等。")]),a._v(" "),s("li",[s("strong",[a._v("灵活的路由：")]),a._v(" 在消息进入队列之前，通过交换器来路由消息。对于典型的路由功能，RabbitMQ 己经提供了一些内置的交换器来实现。针对更复杂的路由功能，可以将多个交换器绑定在一起，也可以通过插件机制来实现自己的交换器。")]),a._v(" "),s("li",[s("strong",[a._v("扩展性：")]),a._v(" 多个RabbitMQ节点可以组成一个集群，也可以根据实际业务情况动态地扩展集群中节点。")]),a._v(" "),s("li",[s("strong",[a._v("高可用性：")]),a._v(" 队列可以在集群中的机器上设置镜像，使得在部分节点出现问题的情况下队列仍然可用。")]),a._v(" "),s("li",[a._v("**支持多种协议： **RabbitMQ 除了原生支持 AMQP 协议，还支持 STOMP、MQTT 等多种消息中间件协议。")]),a._v(" "),s("li",[s("strong",[a._v("多语言客户端：")]),a._v(" RabbitMQ几乎支持所有常用语言，比如 Java、Python、Ruby、PHP、C#、JavaScript等。")]),a._v(" "),s("li",[s("strong",[a._v("易用的管理界面：")]),a._v(" RabbitMQ提供了一个易用的用户界面，使得用户可以监控和管理消息、集群中的节点等。在安装 RabbitMQ 的时候会介绍到，安装好 RabbitMQ 就自带管理界面。")]),a._v(" "),s("li",[s("strong",[a._v("插件机制：")]),a._v(" RabbitMQ 提供了许多插件，以实现从多方面进行扩展，当然也可以编写自己的插件。感觉这个有点类似 Dubbo 的 SPI机制。")])]),a._v(" "),s("h2",{attrs:{id:"_1-2-rabbitmq-核心概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-rabbitmq-核心概念"}},[a._v("#")]),a._v(" 1.2 RabbitMQ 核心概念")]),a._v(" "),s("p",[s("strong",[a._v("RabbitMQ 整体上是一个生产者与消费者模型，主要负责接收、存储、转发消息。")]),a._v("\n​")]),a._v(" "),s("p",[a._v("下图是 RabbitMQ 的整体模型架构")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042209931.png",alt:"rabbitmq1"}})]),a._v(" "),s("h3",{attrs:{id:"_1-2-1-product-生产者-和-consumer-消费者"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-1-product-生产者-和-consumer-消费者"}},[a._v("#")]),a._v(" 1.2.1 Product（生产者）和 Consumer（消费者）")]),a._v(" "),s("ul",[s("li",[s("strong",[a._v("Producet（生产者）：")]),a._v(" 生产消息的一方")]),a._v(" "),s("li",[s("strong",[a._v("Consumer（消费者）：")]),a._v(" 消费消息的一方")])]),a._v(" "),s("p",[a._v("消息一般是由两部分组成："),s("strong",[a._v("消息头")]),a._v("（或者说是标签 Label）和"),s("strong",[a._v("消息体")]),a._v("。\n消息体也可以称为 playLoad，消息体是不透明的，而消息头则由一系列的可选属性组成，这些属性包括 routing-key（路由键）、priority（相对于其他消息的优先权）、delivery-mode（指出该消息可能需要持久性存储）等。\n生产者把消息交由 RabbitMQ 后，RabbitMQ 会根据消息头把消息发送给感兴趣的 Consumer(消费者)。\n​")]),a._v(" "),s("h3",{attrs:{id:"_1-2-2-exchange-交换器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-2-exchange-交换器"}},[a._v("#")]),a._v(" 1.2.2 Exchange（交换器）")]),a._v(" "),s("p",[a._v("在 RabbitMQ 中，消息并不是直接被投递到 Queue（消息队列）中的，中间还必须经过 Exchange（交换器）这一层，Exchange（交换器）会把消息分配到对应的 Queue（消息队列）中。")]),a._v(" "),s("p",[a._v("Exchange（交换器）用来接收生产者发送的消息并将这些消息路由给服务器中的队列，如果路由不到，或许会返回给 Product（生产者），或许会被直接丢弃掉。")]),a._v(" "),s("p",[a._v("RabbitMQ 的 Exchange（交换器）有四种类型，不同的类型对应着不同的路由策略：direct（默认）、fanount、topic、headers，不同类型的 Exchange 转发消息的策略有所不同。")]),a._v(" "),s("p",[a._v("Exchange（交换器）如下图所示：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042210160.png",alt:"rabbitmq2"}})]),a._v(" "),s("p",[a._v("生产者将消息发给交换器的时候，一般会指定一个 RoutingKey（路由键），用来指定这个消息的路由规则，而这个 Rounting 需要与交换器类型和绑定键（BindingKey）联合使用才能最终生效。")]),a._v(" "),s("p",[a._v("RabbitMQ 中通过 Binding(绑定) 将 Exchange(交换器) 与 Queue(消息队列) 关联起来，在绑定的时候一般会指定一个 BindingKey(绑定建) ,这样 RabbitMQ 就知道如何正确将消息路由到队列了。\n如下图所示。一个绑定就是基于路由键将交换器和消息队列连接起来的路由规则，所以可以将交换器理解成一个由绑定构成的路由表。Exchange 和 Queue 的绑定可以是多对多的关系。\nBinding（绑定）示意图：")]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042210361.png",alt:"rabbitmq3"}})]),a._v(" "),s("p",[a._v("生产者将消息发送给交换器时，需要一个RoutingKey，当 BindingKey 和 RoutingKey 相匹配时，消息会被路由到对应的队列中。\n在绑定多个队列到同一个交换器的时候，这些绑定允许使用相同的 BindingKey。\nBindingKey 并不是在所有的情况下都生效，它依赖于交换器类型，比如 fanout 类型的交换器就会无视，而是将消息路由到所有绑定到该交换器的队列中。")]),a._v(" "),s("h3",{attrs:{id:"_1-2-3-queue-消息队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-3-queue-消息队列"}},[a._v("#")]),a._v(" 1.2.3 Queue（消息队列）")]),a._v(" "),s("p",[s("strong",[a._v("Queue（消息队列）用来保存消息直到发送给消费者。")])]),a._v(" "),s("ul",[s("li",[a._v("它是消息的容器，也是消息的终点。")]),a._v(" "),s("li",[a._v("一个消息可投入一个或多个队列。")]),a._v(" "),s("li",[a._v("消息一直在队列里面，等待消费者连接到这个队列将其取走。")])]),a._v(" "),s("p",[s("strong",[a._v("RabbitMQ 中消息只能存储在队列中，这一点和 Kafka 这种消息中间件相反。")])]),a._v(" "),s("ul",[s("li",[a._v("Kafka 将消息存储在 topic（主题）这个逻辑层面，而相应的队列逻辑只是 topic 实际存储文件中的位移标识。")]),a._v(" "),s("li",[a._v("RabbitMQ 的生产者生产消息并最终投递到队列中，消费者可以从队列中获取消息并消费。")])]),a._v(" "),s("p",[s("strong",[a._v("多个消费者可以订阅同一个队列，这时队列中的消息会被平均分摊（Round-Robin，即轮询）给多个消费者进行处理，而不是每个消费者都收到所有的消息并处理，这样避免消息被重复消费。")]),a._v("\n​")]),a._v(" "),s("p",[a._v("RabbitMQ 不支持队列层面的广播消费,如果有广播消费的需求，需要在其上进行二次开发,这样会很麻烦，不建议这样做。\n​")]),a._v(" "),s("h3",{attrs:{id:"_1-2-4-broker-消息中间件的服务节点"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-4-broker-消息中间件的服务节点"}},[a._v("#")]),a._v(" 1.2.4 Broker（消息中间件的服务节点）")]),a._v(" "),s("p",[a._v("对于 RabbitMQ 来说，一个 RabbitMQ Broker 可以简单地看作一个 RabbitMQ 服务节点，或者RabbitMQ服务实例。\n大多数情况下也可以将一个 RabbitMQ Broker 看作一台 RabbitMQ 服务器。\n​")]),a._v(" "),s("p",[a._v("下图展示了生产者将消息存入 RabbitMQ Broker，以及消费者从 Broker 中消费数据的整个流程。\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042210069.png",alt:"rabbitmq4"}})]),a._v(" "),s("h3",{attrs:{id:"_1-2-5-exchange-types-交换器类型"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-exchange-types-交换器类型"}},[a._v("#")]),a._v(" 1.2.5 Exchange Types（交换器类型）")]),a._v(" "),s("p",[a._v("RabbitMQ 常用的 Exchange Type 有 fanout、direct、topic、headers 四种。\n​")]),a._v(" "),s("h4",{attrs:{id:"_1-2-5-1-fanout-扇形交换器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-1-fanout-扇形交换器"}},[a._v("#")]),a._v(" 1.2.5.1 fanout 扇形交换器")]),a._v(" "),s("p",[a._v("fanout 类型的Exchange路由规则非常简单，它会把所有发送到该Exchange的消息路由到所有与它绑定的Queue中，不需要做任何判断操作，"),s("strong",[a._v("所以 fanout 类型是所有的交换机类型里面速度最快的。")]),a._v(" "),s("strong",[a._v("fanout 类型常用来广播消息 。")]),a._v("\n​")]),a._v(" "),s("h4",{attrs:{id:"_1-2-5-2-direct-直连交换器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-2-direct-直连交换器"}},[a._v("#")]),a._v(" 1.2.5.2 direct 直连交换器")]),a._v(" "),s("p",[a._v("direct 类型的Exchange路由规则也很简单，它会把消息路由到那些 Bindingkey 与 RoutingKey 完全匹配的 Queue 中。\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042211996.png",alt:"rabbitmq5"}})]),a._v(" "),s("p",[a._v("以上图为例：")]),a._v(" "),s("ul",[s("li",[a._v("如果发送消息的时候设置路由键为“warning”,那么消息会路由到 Queue1 和 Queue2。")]),a._v(" "),s("li",[a._v('如果在发送消息的时候设置路由键为"Info”或者"debug”，消息只会路由到Queue2。')]),a._v(" "),s("li",[a._v("如果以其他的路由键发送消息，则消息不会路由到这两个队列中。")])]),a._v(" "),s("p",[s("strong",[a._v("direct 类型常用在处理有优先级的任务，根据任务的优先级把消息发送到对应的队列，这样可以指派更多的资源去处理高优先级的队列。")])]),a._v(" "),s("h4",{attrs:{id:"_1-2-5-3-topic-主题交换器"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-3-topic-主题交换器"}},[a._v("#")]),a._v(" 1.2.5.3 topic 主题交换器")]),a._v(" "),s("p",[a._v("direct 类型的交换器路由规则是完全匹配 BindingKey 和 RoutingKey ，但是这种严格的匹配方式在很多情况下不能满足实际业务的需求。\ntopic类型的交换器在匹配规则上进行了扩展，它与 direct 类型的交换器相似，也是将消息路由到 BindingKey 和 RoutingKey 相匹配的队列中，但这里的匹配规则有些不同，\n它约定：")]),a._v(" "),s("ul",[s("li",[a._v("RoutingKey 为一个点号“.”分隔的字符串（被点好“.”分隔开的），如“com.rabbitmq.client”、“java.util.concurrent”、“com.hidden.client”;")]),a._v(" "),s("li",[a._v("BindingKey 和 RountingKey 一样也是点号“.”分隔的字符串；")]),a._v(" "),s("li",[a._v("BindingKey 中可以存在两种特殊字符串“"),s("em",[a._v("”和“#”，用于做模糊匹配，其中“")]),a._v("”用于匹配一个单词，“#”用于匹配多个单词（可以是零个）。")])]),a._v(" "),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042211969.png",alt:"rabbitmq6"}})]),a._v(" "),s("p",[a._v("以上图为例：")]),a._v(" "),s("ul",[s("li",[a._v("路由键为 “com.rabbitmq.client” 的消息会同时路由到 Queue1 和 Queue2;")]),a._v(" "),s("li",[a._v("路由键为 “com.hidden.client” 的消息只会路由到 Queue2 中；")]),a._v(" "),s("li",[a._v("路由键为 “com.hidden.demo” 的消息只会路由到 Queue2 中；")]),a._v(" "),s("li",[a._v("路由键为 “java.rabbitmq.demo” 的消息只会路由到 Queue1 中；")]),a._v(" "),s("li",[a._v("路由键为 “java.util.concurrent” 的消息将会被丢弃或者返回给生产者（需要设置 mandatory 参数），因为它没有匹配任何路由键  。")])]),a._v(" "),s("h4",{attrs:{id:"_1-2-5-4-headers-首部交换器-不推荐"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-2-5-4-headers-首部交换器-不推荐"}},[a._v("#")]),a._v(" 1.2.5.4 headers 首部交换器（不推荐）")]),a._v(" "),s("p",[a._v("headers 类型的交换器不依赖于路由键的匹配规则来路由消息，而是根据发送的消息内容中的 headers 属性进行匹配。\n在绑定队列和交换器时指定一组键值对，当发送消息到交换器时，RabbitMQ会获取到该消息的 headers（也是一个键值对的形式)，对比其中的键值对是否完全匹配队列和交换器绑定时指定的键值对，如果完全匹配则消息会路由到该队列，否则不会路由到该队列。\n**headers 类型的交换器性能会很差，而且也不实用，基本上不会看到它的存在。 **\n"),s("strong",[a._v("​")])]),a._v(" "),s("h2",{attrs:{id:"_1-3-rabbitmq-五种消息发送模式"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-rabbitmq-五种消息发送模式"}},[a._v("#")]),a._v(" 1.3 RabbitMQ 五种消息发送模式")]),a._v(" "),s("h3",{attrs:{id:"_1-3-1-简单队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-1-简单队列"}},[a._v("#")]),a._v(" 1.3.1 简单队列")]),a._v(" "),s("ul",[s("li",[a._v("生产者将消息发送到队列，消费者从队列获取消息")]),a._v(" "),s("li",[a._v("一个队列对应一个消费者")])]),a._v(" "),s("h3",{attrs:{id:"_1-3-2-工作队列"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-2-工作队列"}},[a._v("#")]),a._v(" 1.3.2 工作队列")]),a._v(" "),s("ul",[s("li",[a._v("一个生产者，多个消费者")]),a._v(" "),s("li",[a._v("一个消息发送到队列时，只能被一个消费者获取")]),a._v(" "),s("li",[a._v("多个消费者并行处理消息，提升消息处理速度")])]),a._v(" "),s("h3",{attrs:{id:"_1-3-3-发布-订阅模式-publish-subcribe"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-3-发布-订阅模式-publish-subcribe"}},[a._v("#")]),a._v(" 1.3.3 发布/订阅模式（Publish/Subcribe）")]),a._v(" "),s("p",[a._v("将消息发送到交换机，队列从交换机获取消息，队列需要绑定到交换机。")]),a._v(" "),s("ul",[s("li",[a._v("一个生产者，多个消费者")]),a._v(" "),s("li",[a._v("每一个消费者都有自己的一个队列")]),a._v(" "),s("li",[a._v("生产者没有将消息直接发送到队列，而是发送到交换机")]),a._v(" "),s("li",[a._v("每一个队列都要绑定到交换机")]),a._v(" "),s("li",[a._v("生产者发送的消息，经过交换机到达队列，实现一个消息被多个消费者消费的目的")]),a._v(" "),s("li",[a._v("交换机类型威“fanout”")])]),a._v(" "),s("p",[a._v("交换机本身没有存储消息的能力，消息只能存储到队列中。")]),a._v(" "),s("h3",{attrs:{id:"_1-3-4-路由模式-routing"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-4-路由模式-routing"}},[a._v("#")]),a._v(" 1.3.4 路由模式（Routing）")]),a._v(" "),s("p",[a._v("路由模式是发布/订阅的一种特殊情况\n路由模式的交换机类型威“direct”\n绑定队列到交换机时指定 key ，即路由键，一个队列可以指定多个路由键\n生产者发送消息时指定路由键，这时，消息只会发送到绑定 key 的队列中")]),a._v(" "),s("h3",{attrs:{id:"_1-3-5-主题模式-topic"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_1-3-5-主题模式-topic"}},[a._v("#")]),a._v(" 1.3.5 主题模式（Topic）")]),a._v(" "),s("p",[a._v("将路由键和某模式进行匹配。此时，队列需要绑定到一个模式上。\n符号“#”匹配一个或多个词，“*”匹配不多不少一个词。 \n绑定队列到交换机指定key时，进行通配符模式匹配。")]),a._v(" "),s("h1",{attrs:{id:"二、安装-rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二、安装-rabbitmq"}},[a._v("#")]),a._v(" 二、安装 RabbitMQ")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/qq_39135287/article/details/95725385",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.csdn.net/qq_39135287/article/details/95725385"),s("OutboundLink")],1),a._v("\n因为 RabbitMQ  是由 Erlang 语言编写的，所以安装 RabbitMQ 之前需要安装 Erlang。\n注意：在安装 RabbitMQ 的时候需要注意 RabbitMQ 和 Erlang 的版本关系，两者对应关系如下：\n"),s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042211914.png",alt:"rabbitmq7"}})]),a._v(" "),s("h2",{attrs:{id:"_2-1-安装-erlang"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-安装-erlang"}},[a._v("#")]),a._v(" 2.1 安装 Erlang")]),a._v(" "),s("p",[a._v("PS：下述操作目录：/usr/local")]),a._v(" "),s("h3",{attrs:{id:"_2-1-1-下载-erlang-安装包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-1-下载-erlang-安装包"}},[a._v("#")]),a._v(" 2.1.1 下载 Erlang 安装包")]),a._v(" "),s("p",[a._v("在官网下载后上传到 Linux 上，或者直接用下面的命令下载对应的版本。")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SnailClimb")]),a._v(" local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("#wget https"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("erlang"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("org"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("download"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("otp_src_19"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.")]),a._v("tar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("gz\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("erlang 官网下载："),s("a",{attrs:{href:"https://www.erlang.org/downloads",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.erlang.org/downloads"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"_2-1-2-解压-erlang-安装包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-2-解压-erlang-安装包"}},[a._v("#")]),a._v(" 2.1.2 解压 Erlang 安装包")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SnailClimb")]),a._v(" local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("#tar "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("xvzf otp_src_19"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.")]),a._v("tar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("gz\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-1-3-删除-erlang-安装包"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-3-删除-erlang-安装包"}},[a._v("#")]),a._v(" 2.1.3 删除 Erlang 安装包")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SnailClimb")]),a._v(" local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("#rm "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("rf otp_src_19"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3.")]),a._v("tar"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("gz\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-1-4-安装-erlang-的依赖工具"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-4-安装-erlang-的依赖工具"}},[a._v("#")]),a._v(" 2.1.4 安装 Erlang 的依赖工具")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SnailClimb")]),a._v(" local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("#yum "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("y install make gcc gcc"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("c"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("++")]),a._v(" kernel"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("devel m4 ncurses"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("devel openssl"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("devel unixODBC"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("devel\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-1-5-进入-erlang-安装包解压文件对-elrang-进行安装环境的配置"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-5-进入-erlang-安装包解压文件对-elrang-进行安装环境的配置"}},[a._v("#")]),a._v(" 2.1.5 进入 Erlang 安装包解压文件对 Elrang 进行安装环境的配置")]),a._v(" "),s("p",[a._v("在 /usr/local 目录下新建一个文件夹")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SnailClimb")]),a._v(" local"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("# mkdir erlang\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("进入 Erlang 安装包对 Erlang 进行安装环境的配置")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[a._v("cd "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("otp_src_19"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SnailClimb")]),a._v(" otp_src_19"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("# "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("/configure "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("prefix"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("usr"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("local"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("/")]),a._v("erlang "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("--")]),a._v("without"),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("-")]),a._v("javac\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("h3",{attrs:{id:"_2-1-6-编译安装"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-6-编译安装"}},[a._v("#")]),a._v(" 2.1.6 编译安装")]),a._v(" "),s("div",{staticClass:"language-java line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-java"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root"),s("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@SnailClimb")]),a._v(" otp_src_19"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),s("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v("# make "),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("&&")]),a._v(" make install\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-1-7-验证是否安装成功"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-7-验证是否安装成功"}},[a._v("#")]),a._v(" 2.1.7 验证是否安装成功")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb otp_src_19.3"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ./bin/erl")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("运行下面的语句输出“hello world”证明安装成功。")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v(" io:format"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"hello world~n"')]),a._v(", "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(".\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042211223.png",alt:"rabbitmq8"}})]),a._v(" "),s("h3",{attrs:{id:"_2-1-8-配置-erlang-环境变量"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-1-8-配置-erlang-环境变量"}},[a._v("#")]),a._v(" 2.1.8 配置 Erlang 环境变量")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("cd")]),a._v(" /etc\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# vim profile")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br")])]),s("p",[a._v("追加下列环境变量到文件末尾")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("#erlang")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ERL_HOME")]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v("/usr/local/erlang\n"),s("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")])]),s("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),s("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$ERL_HOME")]),a._v("/bin:"),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("$PATH")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("export")]),a._v(" ERL_HOME "),s("span",{pre:!0,attrs:{class:"token environment constant"}},[a._v("PATH")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br")])]),s("p",[a._v("运行下列命令使配置文件 profile 生效")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# source /etc/profile")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("输入 erl 查看 Erlang 环境变量是否配置正确")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb etc"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# erl")]),a._v("\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[s("img",{attrs:{src:"https://cdn.jsdelivr.net/gh/Willis-zzx/PicGO/img/202203042212789.png",alt:"rabbitmq9"}})]),a._v(" "),s("h2",{attrs:{id:"_2-2-安装-rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-安装-rabbitmq"}},[a._v("#")]),a._v(" 2.2 安装 RabbitMQ")]),a._v(" "),s("h3",{attrs:{id:"_2-2-1-下载-rpm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-1-下载-rpm"}},[a._v("#")]),a._v(" 2.2.1 下载 rpm")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("wget")]),a._v(" https://www.rabbitmq.com/releases/rabbitmq-server/v3.6.8/rabbitmq-server-3.6.8-1.el7.noarch.rpm\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("或者直接在官网下载\n"),s("a",{attrs:{href:"https://www.rabbitmq.com/install-rpm.html",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://www.rabbitmq.com/install-rpm.html"),s("OutboundLink")],1)]),a._v(" "),s("h3",{attrs:{id:"_2-2-2-安装-rpm"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-2-安装-rpm"}},[a._v("#")]),a._v(" 2.2.2 安装 rpm")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("rpm")]),a._v(" --import https://www.rabbitmq.com/rabbitmq-release-signing-key.asc\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v("紧接着执行：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("yum "),s("span",{pre:!0,attrs:{class:"token function"}},[a._v("install")]),a._v(" rabbitmq-server-3.6.8-1.el7.noarch.rpm\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("p",[a._v('中途需要输入"y"才能继续安装。')]),a._v(" "),s("h3",{attrs:{id:"_2-2-3-开启web管理插件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-3-开启web管理插件"}},[a._v("#")]),a._v(" 2.2.3 开启web管理插件")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[a._v("rabbitmq-plugins "),s("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("enable")]),a._v(" rabbitmq_management\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-2-4-设置开机启动"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-4-设置开机启动"}},[a._v("#")]),a._v(" 2.2.4 设置开机启动")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("chkconfig")]),a._v(" rabbitmq-server on\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-2-5-启动服务"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-5-启动服务"}},[a._v("#")]),a._v(" 2.2.5 启动服务")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" rabbitmq-server start\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-2-6-查看服务状态"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-6-查看服务状态"}},[a._v("#")]),a._v(" 2.2.6 查看服务状态")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[a._v("service")]),a._v(" rabbitmq-server status\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br")])]),s("h3",{attrs:{id:"_2-2-7-访问-rabbitmq-控制台"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#_2-2-7-访问-rabbitmq-控制台"}},[a._v("#")]),a._v(" 2.2.7 访问 RabbitMQ 控制台")]),a._v(" "),s("p",[a._v("浏览器访问：http://ip地址:15672/\n默认用户名和密码：guest/guest    ps：guest 用户只是被允许从 localhost 访问。\n"),s("strong",[a._v("解决远程访问 RabbitMQ ：")]),a._v("\n新建用户并授权：")]),a._v(" "),s("div",{staticClass:"language-bash line-numbers-mode"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb rabbitmq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# rabbitmqctl add_user root root")]),a._v("\nCreating user "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"root"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb rabbitmq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# rabbitmqctl set_user_tags root administrator")]),a._v("\n\nSetting tags "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" user "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"root"')]),a._v(" to "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("administrator"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb rabbitmq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# ")]),a._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v("root@SnailClimb rabbitmq"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),s("span",{pre:!0,attrs:{class:"token comment"}},[a._v('# rabbitmqctl set_permissions -p / root ".*" ".*" ".*"')]),a._v("\nSetting permissions "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("for")]),a._v(" user "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"root"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("in")]),a._v(" vhost "),s("span",{pre:!0,attrs:{class:"token string"}},[a._v('"/"')]),a._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v(".\n")])]),a._v(" "),s("div",{staticClass:"line-numbers-wrapper"},[s("span",{staticClass:"line-number"},[a._v("1")]),s("br"),s("span",{staticClass:"line-number"},[a._v("2")]),s("br"),s("span",{staticClass:"line-number"},[a._v("3")]),s("br"),s("span",{staticClass:"line-number"},[a._v("4")]),s("br"),s("span",{staticClass:"line-number"},[a._v("5")]),s("br"),s("span",{staticClass:"line-number"},[a._v("6")]),s("br"),s("span",{staticClass:"line-number"},[a._v("7")]),s("br"),s("span",{staticClass:"line-number"},[a._v("8")]),s("br")])]),s("p",[a._v("再次访问:http://ip地址:15672/ ,输入用户名和密码：root root")]),a._v(" "),s("h1",{attrs:{id:"三、springboot-集成-rabbitmq"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#三、springboot-集成-rabbitmq"}},[a._v("#")]),a._v(" 三、SpringBoot 集成 RabbitMQ")]),a._v(" "),s("p",[s("a",{attrs:{href:"https://blog.csdn.net/qq_35387940/article/details/100514134",target:"_blank",rel:"noopener noreferrer"}},[a._v("https://blog.csdn.net/qq_35387940/article/details/100514134"),s("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=n.exports}}]);