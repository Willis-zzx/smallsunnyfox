(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{477:function(a,s,n){"use strict";n.r(s);var t=n(14),e=Object(t.a)({},(function(){var a=this,s=a.$createElement,n=a._self._c||s;return n("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[n("h2",{attrs:{id:"_1、什么是spring框架"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_1、什么是spring框架"}},[a._v("#")]),a._v(" 1、什么是Spring框架")]),a._v(" "),n("p",[a._v("Spring是一款开源的轻量级Java开发框架，旨在提高开发人员的开发效率以及系统的可维护性。")]),a._v(" "),n("p",[a._v("一般所说的Spring框架指的都是Spring Framework，它是很多模块的集合，使用这些模块可以很方便地协助我们进行开发。")]),a._v(" "),n("p",[a._v("比如说 Spring 自带 IoC（Inverse of Control:控制反转） 和 AOP(Aspect-Oriented Programming:面向切面编程)、可以很方便地对数据库进行访问、可以很方便地集成第三方组件（电子邮件，任务，调度，缓存等等）、对单元测试支持比较好、支持 RESTful Java 应用程序的开发。")]),a._v(" "),n("p",[a._v("Spring最核心的思想是不重复造轮子，开箱即用。")]),a._v(" "),n("p",[a._v("Spring最核心的功能是IoC和AOP。")]),a._v(" "),n("h2",{attrs:{id:"_2、spring有什么优势"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_2、spring有什么优势"}},[a._v("#")]),a._v(" 2、Spring有什么优势")]),a._v(" "),n("ul",[n("li",[a._v("简化开发：Spring就像是一个大工厂，可以将所有对象的创建和依赖关系的维护交给Spring容器管理，降低了组件之间的耦合性。")]),a._v(" "),n("li",[a._v("声明式事务的支持：只需要通过配置就可以完成对事务的管理，而无需手动编程，提高开发效率和质量。")]),a._v(" "),n("li",[a._v("集成各种优秀框架：Spring接受各种开源框架，其内部提供了对各种优秀框架的直接支持。")]),a._v(" "),n("li",[a._v("AOP编程的支持：Spring提供面向切面编程，可以方便地实现对程序进行权限拦截和运行监控等功能。")])]),a._v(" "),n("h2",{attrs:{id:"_3、spring有哪一些重要模块"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、spring有哪一些重要模块"}},[a._v("#")]),a._v(" 3、Spring有哪一些重要模块")]),a._v(" "),n("p",[a._v("Spring Core：核心模块，Spring其他所有的功能基本都需要依赖于该类库，"),n("strong",[a._v("主要提供IoC依赖注入功能的支持")]),a._v("。")]),a._v(" "),n("p",[a._v("Spring Aspects：该模块为与AspectJ的集成提供支持。")]),a._v(" "),n("p",[a._v("Spring AOP：提供面向切面的编程实现。")]),a._v(" "),n("p",[a._v("Spring Data Access/Integration：由五个模块组成")]),a._v(" "),n("ul",[n("li",[a._v("spring-jdbc : 提供了对数据库访问的抽象 JDBC。不同的数据库都有自己独立的 API 用于操作数据库，而 Java 程序只需要和 JDBC API 交互，这样就屏蔽了数据库的影响。")]),a._v(" "),n("li",[a._v("spring-tx : 提供对事务的支持。")]),a._v(" "),n("li",[a._v("spring-orm : 提供对 Hibernate 等 ORM 框架的支持。")]),a._v(" "),n("li",[a._v("spring-oxm ： 提供对 Castor 等 OXM 框架的支持。")]),a._v(" "),n("li",[a._v("spring-jms : Java 消息服务。")])]),a._v(" "),n("p",[a._v("Spring Web：由四个模块组成")]),a._v(" "),n("ul",[n("li",[a._v("spring-web ：对 Web 功能的实现提供一些最基础的支持。")]),a._v(" "),n("li",[a._v("spring-webmvc ： 提供对 Spring MVC 的实现。")]),a._v(" "),n("li",[a._v("spring-websocket ： 提供了对 WebSocket 的支持，WebSocket 可以让客户端和服务端进行双向通信。")]),a._v(" "),n("li",[a._v("spring-webflux ：提供对 WebFlux 的支持。WebFlux 是 Spring Framework 5.0 中引入的新的响应式框架。与 Spring MVC 不同，它不需要 Servlet API，是完全异步")])]),a._v(" "),n("p",[a._v("Spring Test：")]),a._v(" "),n("ul",[n("li",[a._v("Spring 团队提倡测试驱动开发（TDD）。有了控制反转 (IoC)的帮助，单元测试和集成测试变得更简单。")]),a._v(" "),n("li",[a._v("Spring 的测试模块对 JUnit（单元测试框架）、TestNG（类似 JUnit）、Mockito（主要用来 Mock 对象）、PowerMock（解决 Mockito 的问题比如无法模拟 final, static， private 方法）等等常用的测试框架支持的都比较好。")])]),a._v(" "),n("h2",{attrs:{id:"_3、spring-ioc-aop"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3、spring-ioc-aop"}},[a._v("#")]),a._v(" 3、Spring IOC & AOP")]),a._v(" "),n("h3",{attrs:{id:"_3-1、自己对于spring-ioc的了解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-1、自己对于spring-ioc的了解"}},[a._v("#")]),a._v(" 3.1、自己对于Spring IoC的了解")]),a._v(" "),n("p",[a._v("IoC（Inverse of Control:控制反转） 是一种设计思想，而不是一个具体的技术实现。")]),a._v(" "),n("p",[a._v("IoC的思想就是将原本在程序中手动创建对象的控制权，交由Spring框架来管理。")]),a._v(" "),n("p",[a._v("不过，IoC并非Spring独有，在其他语言中也有应用。")]),a._v(" "),n("h3",{attrs:{id:"_3-2、为什么叫控制反转"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-2、为什么叫控制反转"}},[a._v("#")]),a._v(" 3.2、为什么叫控制反转？")]),a._v(" "),n("ul",[n("li",[a._v("控制：指的是对象创建（实例化、管理）的权利")]),a._v(" "),n("li",[a._v("反转：控制权交给外部环境（Spring框架、IoC容器）")])]),a._v(" "),n("p",[n("img",{attrs:{src:"/smallsunnyfox/images/frc-365faceb5697f04f31399937c059c162.png",alt:""}})]),a._v(" "),n("p",[a._v("将对象之间的相互依赖关系交给IoC容器来管理，并由IoC容器完成对象的注入。这样可以很大程度上简化应用的开发，把应用从复杂的依赖关系中解放出来。")]),a._v(" "),n("p",[a._v("IoC容器就像是一个工厂一样，当我们需要创建一个对象的时候，只需要配置好配置文件/注解即可，完全不用考虑对象是如何被创建出来的。")]),a._v(" "),n("p",[a._v("在 Spring 中， IoC 容器是 Spring 用来实现 IoC 的载体， IoC 容器实际上就是个 Map（key，value），Map 中存放的是各种对象。")]),a._v(" "),n("p",[a._v("Spring 时代我们一般通过 XML 文件来配置 Bean，后来开发人员觉得 XML 文件来配置不太好，于是 SpringBoot 注解配置就慢慢开始流行起来。")]),a._v(" "),n("h3",{attrs:{id:"_3-3、自己对于aop的了解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-3、自己对于aop的了解"}},[a._v("#")]),a._v(" 3.3、自己对于AOP的了解")]),a._v(" "),n("p",[a._v("AOP(Aspect-Oriented Programming:面向切面编程)能够将那些与业务无关，却为业务模块所共同调用的逻辑或责任（例如事务处理、日志管理、权限控制等）封装起来，便于减少系统的重复代码，降低模块间的耦合度，并有利于未来的可拓展性和可维护性。")]),a._v(" "),n("p",[a._v("Spring AOP 就是基于动态代理的，如果要代理的对象，实现了某个接口，那么 Spring AOP 会使用 JDK Proxy，去创建代理对象，而对于没有实现接口的对象，就无法使用 JDK Proxy 去进行代理了，这时候 Spring AOP 会使用 Cglib 生成一个被代理对象的子类来作为代理，如下图所示：")]),a._v(" "),n("p",[n("img",{attrs:{src:"/smallsunnyfox/images/Spring-AOP.jpg",alt:""}})]),a._v(" "),n("p",[a._v("也可以使用AspectJ ，Spring AOP已经集成了AspectJ ，AspectJ 应该算得上是Java生态中最完整的一个AOP框架了。")]),a._v(" "),n("h3",{attrs:{id:"_3-4、spring-aop-和-aspectj-aop-有什么区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_3-4、spring-aop-和-aspectj-aop-有什么区别"}},[a._v("#")]),a._v(" 3.4、Spring AOP 和 AspectJ AOP 有什么区别")]),a._v(" "),n("p",[a._v("Spring AOP 属于运行时增强，AspectJ 是编译时增强。")]),a._v(" "),n("p",[a._v("Spring AOP 基于代理（Proxying），而AspectJ 基于字节码操作。")]),a._v(" "),n("p",[a._v("Spring AOP 已经集成了 AspectJ ，AspectJ 应该算得上是Java生态中最完整的AOP框架。AspectJ 相比于Spring AOP 功能更加强大，但 Spring AOP 相对来说更简单。")]),a._v(" "),n("p",[a._v("如果我们的切面比较少，那么两者性能差异不大。但是，当切面太多的话，最好选择 AspectJ ，它比 Spring AOP 快很多。")]),a._v(" "),n("h2",{attrs:{id:"_4、spring-bean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4、spring-bean"}},[a._v("#")]),a._v(" 4、Spring bean")]),a._v(" "),n("h3",{attrs:{id:"_4-1、什么是bean"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-1、什么是bean"}},[a._v("#")]),a._v(" 4.1、什么是bean？")]),a._v(" "),n("p",[a._v("bean代指那些被IoC容器管理的对象。")]),a._v(" "),n("p",[a._v("我们需要告诉IoC容器帮助我们管理哪些对象，这个是通过配置元数据来定义的。配置元数据可以是XML文件、注解或者Java配置类。")]),a._v(" "),n("div",{staticClass:"language-xml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("beans")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("transferService"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("com.acme.TransferServiceImpl"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("/>")])]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("beans")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br")])]),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Configuration")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("AppConfig")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransferService")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("transferService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransferServiceImpl")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br")])]),n("p",[n("code",[a._v("org.springframework.beans")]),a._v("和 "),n("code",[a._v("org.springframework.context")]),a._v(" 这两个包是 IoC 实现的基础。")]),a._v(" "),n("h3",{attrs:{id:"_4-2、bean的作用域有哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-2、bean的作用域有哪些"}},[a._v("#")]),a._v(" 4.2、bean的作用域有哪些")]),a._v(" "),n("p",[a._v("Spring 中 Bean 的作用域通常有下面几种：")]),a._v(" "),n("ul",[n("li",[a._v("singleton：唯一 bean 实例，Spring 中的 bean 默认都是单例的，对单例设计模式的应用。")]),a._v(" "),n("li",[a._v("prototype：每次请求都会创建一个新的bean实例。")]),a._v(" "),n("li",[a._v("request：每一次 HTTP 请求都会产生一个新的 bean ，该 bean 仅在当前 HTTP request 内有效。")]),a._v(" "),n("li",[a._v("session：每一次 HTTP 请求都会产生一个新的 bean ，该 bean 仅在当前 HTTP session 内有效。")]),a._v(" "),n("li",[a._v("global-session：全局 session 作用域，仅仅在基于 protlet 的 web 应用中才有意义，Spring5 已经没有了。")])]),a._v(" "),n("p",[a._v("如何配置 bean 的作用域？")]),a._v(" "),n("ul",[n("li",[n("p",[a._v("xml 方式：")]),a._v(" "),n("div",{staticClass:"language-xml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-xml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("<")]),a._v("bean")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("id")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("class")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("..."),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),a._v(" "),n("span",{pre:!0,attrs:{class:"token attr-name"}},[a._v("scope")]),n("span",{pre:!0,attrs:{class:"token attr-value"}},[n("span",{pre:!0,attrs:{class:"token punctuation attr-equals"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')]),a._v("singleton"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v('"')])]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token tag"}},[n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("</")]),a._v("bean")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(">")])]),a._v("\n\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br")])])]),a._v(" "),n("li",[n("p",[a._v("注解方式：")]),a._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Scope")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("ConfigurableBeanFactory")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("SCOPE_PROTOTYPE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("personPrototype")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Person")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br")])])])]),a._v(" "),n("h3",{attrs:{id:"_4-3、单例-bean-的线程安全了解吗"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-3、单例-bean-的线程安全了解吗"}},[a._v("#")]),a._v(" 4.3、单例 bean 的线程安全了解吗？")]),a._v(" "),n("p",[a._v("单例 bean 存在线程问题，主要是因为当多个线程操作同一个对象的时候是存在资源竞争的。")]),a._v(" "),n("p",[a._v("常见的有两种解决办法：")]),a._v(" "),n("ol",[n("li",[a._v("在 bean 中尽量避免定义可变的成员变量。")]),a._v(" "),n("li",[a._v("在类中定义一个 "),n("code",[a._v("ThreadLocal")]),a._v(" 成员变量，将需要的可变成员变量保存在 "),n("code",[a._v("ThreadLocal")]),a._v(" 中（推荐的一种方式）。")])]),a._v(" "),n("p",[a._v("不过，大部分 bean 实际都是无状态（没有实例变量）的（比如 Dao、Service），这种情况下， bean 是线程安全的。")]),a._v(" "),n("h3",{attrs:{id:"_4-4、-component-和-bean-有什么区别"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-4、-component-和-bean-有什么区别"}},[a._v("#")]),a._v(" 4.4、@Component 和 @Bean 有什么区别？")]),a._v(" "),n("ul",[n("li",[n("code",[a._v("@Component")]),a._v(" 注解作用于类，而"),n("code",[a._v("@Bean")]),a._v("注解作用于方法。")]),a._v(" "),n("li",[n("code",[a._v("@Component")]),a._v("通常是通过类路径扫描来自动侦测以及自动装配到 Spring 容器中（我们可以使用 "),n("code",[a._v("@ComponentScan")]),a._v(" 注解定义要扫描的路径从中找出标识了需要装配的类自动装配到 Spring 的 bean 容器中）。"),n("code",[a._v("@Bean")]),a._v(" 注解通常是我们在标有该注解的方法中定义产生这个 bean,"),n("code",[a._v("@Bean")]),a._v("告诉了 Spring 这是某个类的实例，当我需要用它的时候还给我。")]),a._v(" "),n("li",[n("code",[a._v("@Bean")]),a._v(" 注解比 "),n("code",[a._v("@Component")]),a._v(" 注解的自定义性更强，而且很多地方我们只能通过 "),n("code",[a._v("@Bean")]),a._v(" 注解来注册 bean。比如当我们引用第三方库中的类需要装配到 "),n("code",[a._v("Spring")]),a._v("容器时，则只能通过 "),n("code",[a._v("@Bean")]),a._v("来实现。")])]),a._v(" "),n("p",[a._v("下面这个例子是通过 "),n("code",[a._v("@Component")]),a._v(" 无法实现的。")]),a._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Bean")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("OneService")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("getService")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("case")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("status"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        when "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("1")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl1")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        when "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("2")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl2")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n        when "),n("span",{pre:!0,attrs:{class:"token number"}},[a._v("3")]),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v(":")]),a._v("\n                "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("new")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("serviceImpl3")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br")])]),n("h3",{attrs:{id:"_4-5、将一个类声明为-bean-的注解有哪些"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-5、将一个类声明为-bean-的注解有哪些"}},[a._v("#")]),a._v(" 4.5、将一个类声明为 bean 的注解有哪些")]),a._v(" "),n("p",[a._v("我们一般使用 "),n("code",[a._v("@Autowired")]),a._v(" 注解自动装配 bean，要想把类标识成可用于 "),n("code",[a._v("@Autowired")]),a._v(" 注解自动装配的 bean 的类,采用以下注解可实现：")]),a._v(" "),n("ul",[n("li",[n("code",[a._v("@Component")]),a._v(" ：通用的注解，可标注任意类为 "),n("code",[a._v("Spring")]),a._v(" 组件。如果一个 Bean 不知道属于哪个层，可以使用"),n("code",[a._v("@Component")]),a._v(" 注解标注。")]),a._v(" "),n("li",[n("code",[a._v("@Repository")]),a._v(" : 对应持久层即 Dao 层，主要用于数据库相关操作。")]),a._v(" "),n("li",[n("code",[a._v("@Service")]),a._v(" : 对应服务层，主要涉及一些复杂的逻辑，需要用到 Dao 层。")]),a._v(" "),n("li",[n("code",[a._v("@Controller")]),a._v(" : 对应 Spring MVC 控制层，主要用户接受用户请求并调用 Service 层返回数据给前端页面。")])]),a._v(" "),n("h3",{attrs:{id:"_4-6、bean-的生命周期"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_4-6、bean-的生命周期"}},[a._v("#")]),a._v(" 4.6、bean 的生命周期")]),a._v(" "),n("ul",[n("li",[a._v("Bean 容器找到配置文件中 Spring Bean 的定义")]),a._v(" "),n("li",[a._v("Bean 容器利用 Java Reflection API 创建一个 Bean 的实例。")]),a._v(" "),n("li",[a._v("如果涉及到一些属性值，利用 "),n("code",[a._v("set()")]),a._v("方法设置一些属性值")]),a._v(" "),n("li",[a._v("如果 Bean 实现了 "),n("code",[a._v("BeanNameAware")]),a._v(" 接口，调用 "),n("code",[a._v("setBeanName()")]),a._v("方法，传入 Bean 的名字。")]),a._v(" "),n("li",[a._v("如果 Bean 实现了 "),n("code",[a._v("BeanClassLoaderAware")]),a._v(" 接口，调用 "),n("code",[a._v("setBeanClassLoader()")]),a._v("方法，传入 "),n("code",[a._v("ClassLoader")]),a._v("对象的实例。")]),a._v(" "),n("li",[a._v("如果 Bean 实现了 "),n("code",[a._v("BeanFactoryAware")]),a._v(" 接口，调用 "),n("code",[a._v("setBeanClassLoader()")]),a._v("方法，传入 "),n("code",[a._v("ClassLoade")]),a._v(" r 对象的实例。")]),a._v(" "),n("li",[a._v("与上面的类似，如果实现了其他 "),n("code",[a._v("*.Aware")]),a._v("接口，就调用相应的方法。")]),a._v(" "),n("li",[a._v("如果有和加载这个 Bean 的 Spring 容器相关的 "),n("code",[a._v("BeanPostProcessor")]),a._v(" 对象，执行"),n("code",[a._v("postProcessBeforeInitialization()")]),a._v(" 方法")]),a._v(" "),n("li",[a._v("如果 Bean 实现了"),n("code",[a._v("InitializingBean")]),a._v("接口，执行"),n("code",[a._v("afterPropertiesSet()")]),a._v("方法。")]),a._v(" "),n("li",[a._v("如果 Bean 在配置文件中的定义包含 init-method 属性，执行指定的方法。")]),a._v(" "),n("li",[a._v("如果有和加载这个 Bean 的 Spring 容器相关的 "),n("code",[a._v("BeanPostProcessor")]),a._v(" 对象，执行"),n("code",[a._v("postProcessAfterInitialization()")]),a._v(" 方法")]),a._v(" "),n("li",[a._v("当要销毁 Bean 的时候，如果 Bean 实现了 "),n("code",[a._v("DisposableBean")]),a._v(" 接口，执行 "),n("code",[a._v("destroy()")]),a._v(" 方法。")]),a._v(" "),n("li",[a._v("当要销毁 Bean 的时候，如果 Bean 在配置文件中的定义包含 destroy-method 属性，执行指定的方法。")])]),a._v(" "),n("p",[n("img",{attrs:{src:"/smallsunnyfox/images/Spring-bean.jpg",alt:""}})]),a._v(" "),n("h2",{attrs:{id:"_5、spring-mvc"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5、spring-mvc"}},[a._v("#")]),a._v(" 5、Spring MVC")]),a._v(" "),n("h3",{attrs:{id:"_5-1、对-spring-mvc-的了解"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、对-spring-mvc-的了解"}},[a._v("#")]),a._v(" 5.1、对 Spring MVC 的了解")]),a._v(" "),n("p",[a._v("MVC 是模型（Model）、视图（View）、控制器（Controller）的简写。")]),a._v(" "),n("p",[a._v("其核心思想是通过将业务逻辑、数据、显示分离来组织代码。")]),a._v(" "),n("p",[n("img",{attrs:{src:"/smallsunnyfox/images/image-20210809181452421.png",alt:""}})]),a._v(" "),n("p",[a._v("想要真正理解 Spring MVC ，要先看看 Model 1 和 Model 2 这两个没有 Spring MVC 的时代。")]),a._v(" "),n("p",[n("strong",[a._v("Model 1 时代：")])]),a._v(" "),n("p",[a._v("在 Model 1 时代，整个 Web 应用几乎全部用 JSP 页面组成，只用少量的 JavaBean 来处理数据库连接、访问等操作。")]),a._v(" "),n("p",[a._v("这个模式下 JSP 即是控制层（Controller）又是表现层（View）。")]),a._v(" "),n("p",[a._v("这种模式存在许多问题，比如控制逻辑和表现逻辑混杂在一起，导致代码重用率极低；再比如前端后端相互依赖，难以进行测试维护并且开发效率极低。")]),a._v(" "),n("p",[n("img",{attrs:{src:"/smallsunnyfox/images/model1.png",alt:""}})]),a._v(" "),n("p",[n("strong",[a._v("Model 2 时代：")])]),a._v(" "),n("p",[a._v("Model 2 时代就是使用 Java Bean(Model) + JSP(View) + Servlet(Controller) 。")]),a._v(" "),n("ul",[n("li",[a._v("Model:系统涉及的数据，也就是 dao 和 bean。")]),a._v(" "),n("li",[a._v("View：展示模型中的数据，只是用来展示。")]),a._v(" "),n("li",[a._v("Controller：处理用户请求都发送给 ，返回数据给 JSP 并展示给用户。")])]),a._v(" "),n("p",[n("img",{attrs:{src:"/smallsunnyfox/images/model2.png",alt:""}})]),a._v(" "),n("p",[a._v("Model2 模式下还存在很多问题，Model2 的抽象和封装程度还远远不够，使用 Model2 进行开发时不可避免地会重复造轮子，这就大大降低了程序的可维护性和复用性。")]),a._v(" "),n("p",[a._v("于是，很多 JavaWeb 开发相关的 MVC 框架应运而生比如 Struts2，但是 Struts2 比较笨重。")]),a._v(" "),n("p",[n("strong",[a._v("Spring MVC 时代：")])]),a._v(" "),n("p",[a._v("随着 Spring 轻量级开发框架的流行，Spring 生态圈出现了 Spring MVC 框架， Spring MVC 是当前最优秀的 MVC 框架。相比于 Struts2 ， Spring MVC 使用更加简单和方便，开发效率更高，并且 Spring MVC 运行速度更快。")]),a._v(" "),n("p",[a._v("MVC 是一种设计模式，Spring MVC 是一款很优秀的 MVC 框架。Spring MVC 可以帮助我们进行更简洁的 Web 层的开发，并且它天生与 Spring 框架集成。Spring MVC 下我们一般把后端项目分为 Service 层（处理业务）、Dao 层（数据库操作）、Entity 层（实体类）、Controller 层(控制层，返回数据给前台页面)。")]),a._v(" "),n("h3",{attrs:{id:"_5-2、spring-mvc-的工作原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_5-2、spring-mvc-的工作原理"}},[a._v("#")]),a._v(" 5.2、Spring MVC 的工作原理")]),a._v(" "),n("p",[n("img",{attrs:{src:"/smallsunnyfox/images/SpringMVC.png",alt:""}})]),a._v(" "),n("p",[a._v("流程说明：")]),a._v(" "),n("ol",[n("li",[a._v("客户端（浏览器）发起请求，直接请求到"),n("code",[a._v("DispatcherServlet")]),a._v("。")]),a._v(" "),n("li",[n("code",[a._v("DispatcherServlet")]),a._v("根据请求信息调用 "),n("code",[a._v("HandlerMapping")]),a._v("，解析请求对应的"),n("code",[a._v("Handler")]),a._v("。")]),a._v(" "),n("li",[a._v("解析到对应的"),n("code",[a._v("Handler")]),a._v("（也就是平常说的"),n("code",[a._v("Controller")]),a._v("控制器）后，开始由"),n("code",[a._v("HandlerAdapter")]),a._v("适配器处理。")]),a._v(" "),n("li",[n("code",[a._v("HandlerAdapter")]),a._v("会根据"),n("code",[a._v("Handler")]),a._v("来调用真正的处理器来处理请求，并处理相应的业务逻辑。")]),a._v(" "),n("li",[a._v("处理器处理完业务后，会返回一个"),n("code",[a._v("ModelAndView")]),a._v("对象，"),n("code",[a._v("Model")]),a._v("是返回的数据对象，"),n("code",[a._v("View")]),a._v("是逻辑上的"),n("code",[a._v("View")]),a._v("。")]),a._v(" "),n("li",[n("code",[a._v("ViewResolver")]),a._v(" 会根据逻辑 "),n("code",[a._v("View")]),a._v(" 查找实际的 "),n("code",[a._v("View")]),a._v("。")]),a._v(" "),n("li",[n("code",[a._v("DispaterServlet")]),a._v(" 把返回的 "),n("code",[a._v("Model")]),a._v(" 传给 "),n("code",[a._v("View")]),a._v("（视图渲染）。")]),a._v(" "),n("li",[a._v("把 "),n("code",[a._v("View")]),a._v(" 返回给请求者（浏览器）。")])]),a._v(" "),n("h2",{attrs:{id:"_6、spring-框架中用到了哪些设计模式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_6、spring-框架中用到了哪些设计模式"}},[a._v("#")]),a._v(" 6、Spring 框架中用到了哪些设计模式")]),a._v(" "),n("ul",[n("li",[n("strong",[a._v("工厂设计模式")]),a._v(" : Spring 使用工厂模式通过 "),n("code",[a._v("BeanFactory")]),a._v("、"),n("code",[a._v("ApplicationContext")]),a._v(" 创建 bean 对象。")]),a._v(" "),n("li",[n("strong",[a._v("代理设计模式")]),a._v(" : Spring AOP 功能的实现。")]),a._v(" "),n("li",[n("strong",[a._v("单例设计模式")]),a._v(" : Spring 中的 Bean 默认都是单例的。")]),a._v(" "),n("li",[n("strong",[a._v("模板方法模式")]),a._v(" : Spring 中 "),n("code",[a._v("jdbcTemplate")]),a._v("、"),n("code",[a._v("hibernateTemplate")]),a._v(" 等以 Template 结尾的对数据库操作的类，它们就使用到了模板模式。")]),a._v(" "),n("li",[n("strong",[a._v("包装器设计模式")]),a._v(" : 我们的项目需要连接多个数据库，而且不同的客户在每次访问中根据需要会去访问不同的数据库。这种模式让我们可以根据客户的需求能够动态切换不同的数据源。")]),a._v(" "),n("li",[n("strong",[a._v("观察者模式:")]),a._v(" Spring 事件驱动模型就是观察者模式很经典的一个应用。")]),a._v(" "),n("li",[n("strong",[a._v("适配器模式")]),a._v(" : Spring AOP 的增强或通知(Advice)使用到了适配器模式、spring MVC 中也是用到了适配器模式适配"),n("code",[a._v("Controller")]),a._v("。")])]),a._v(" "),n("h2",{attrs:{id:"_7、spring-事务"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7、spring-事务"}},[a._v("#")]),a._v(" 7、Spring 事务")]),a._v(" "),n("p",[a._v("。。。。")]),a._v(" "),n("h3",{attrs:{id:"_7-1、spring-管理事务的方式有几种"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-1、spring-管理事务的方式有几种"}},[a._v("#")]),a._v(" 7.1、Spring 管理事务的方式有几种")]),a._v(" "),n("ul",[n("li",[a._v("编程式事务：在代码中硬编码（不推荐使用）：通过 "),n("code",[a._v("TransactionTemplate")]),a._v("或者 "),n("code",[a._v("TransactionManager")]),a._v(" 手动管理事务，实际应用中很少使用，")]),a._v(" "),n("li",[a._v("声明式事务： 在 XML 配置文件中配置或者直接基于注解（推荐使用） : 实际是通过 AOP 实现（基于"),n("code",[a._v("@Transactional")]),a._v(" 的全注解方式使用最多）")])]),a._v(" "),n("h3",{attrs:{id:"_7-2、spring-事务中有哪几种事务传播行为"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-2、spring-事务中有哪几种事务传播行为"}},[a._v("#")]),a._v(" 7.2、Spring 事务中有哪几种事务传播行为")]),a._v(" "),n("p",[a._v("事务传播行为是为了解决业务层方法之间相互调用的事务问题。")]),a._v(" "),n("p",[a._v("当事务方法被另一个事务方法调用时，必须指定事务应该如何传播。例如：方法可能继续在现有事务中运行，也可能开启一个新事务，并在自己的事务中运行。")]),a._v(" "),n("p",[a._v("正确的事务传播行为可能的值如下:")]),a._v(" "),n("p",[n("strong",[a._v("1."),n("code",[a._v("TransactionDefinition.PROPAGATION_REQUIRED")])])]),a._v(" "),n("p",[a._v("使用的最多的一个事务传播行为，我们平时经常使用的"),n("code",[a._v("@Transactional")]),a._v("注解默认使用就是这个事务传播行为。如果当前存在事务，则加入该事务；如果当前没有事务，则创建一个新的事务。")]),a._v(" "),n("p",[n("strong",[n("code",[a._v("2.TransactionDefinition.PROPAGATION_REQUIRES_NEW")])])]),a._v(" "),n("p",[a._v("创建一个新的事务，如果当前存在事务，则把当前事务挂起。也就是说不管外部方法是否开启事务，"),n("code",[a._v("Propagation.REQUIRES_NEW")]),a._v("修饰的内部方法会新开启自己的事务，且开启的事务相互独立，互不干扰。")]),a._v(" "),n("p",[n("strong",[a._v("3."),n("code",[a._v("TransactionDefinition.PROPAGATION_NESTED")])])]),a._v(" "),n("p",[a._v("如果当前存在事务，则创建一个事务作为当前事务的嵌套事务来运行；如果当前没有事务，则该取值等价于"),n("code",[a._v("TransactionDefinition.PROPAGATION_REQUIRED")]),a._v("。")]),a._v(" "),n("p",[n("strong",[a._v("4."),n("code",[a._v("TransactionDefinition.PROPAGATION_MANDATORY")])])]),a._v(" "),n("p",[a._v("如果当前存在事务，则加入该事务；如果当前没有事务，则抛出异常。（mandatory：强制性）")]),a._v(" "),n("p",[a._v("这个使用的很少。")]),a._v(" "),n("p",[a._v("若是错误的配置以下 3 种事务传播行为，事务将不会发生回滚：")]),a._v(" "),n("ul",[n("li",[n("strong",[n("code",[a._v("TransactionDefinition.PROPAGATION_SUPPORTS")])]),a._v(": 如果当前存在事务，则加入该事务；如果当前没有事务，则以非事务的方式继续运行。")]),a._v(" "),n("li",[n("strong",[n("code",[a._v("TransactionDefinition.PROPAGATION_NOT_SUPPORTED")])]),a._v(": 以非事务方式运行，如果当前存在事务，则把当前事务挂起。")]),a._v(" "),n("li",[n("strong",[n("code",[a._v("TransactionDefinition.PROPAGATION_NEVER")])]),a._v(": 以非事务方式运行，如果当前存在事务，则抛出异常。")])]),a._v(" "),n("h3",{attrs:{id:"_7-3、spring-事务中的隔离级别有哪几种"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-3、spring-事务中的隔离级别有哪几种"}},[a._v("#")]),a._v(" 7.3、Spring 事务中的隔离级别有哪几种")]),a._v(" "),n("p",[a._v("和事务传播行为这块一样，为了方便使用，Spring 也相应地定义了一个枚举类："),n("code",[a._v("Isolation")])]),a._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("enum")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Isolation")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("DEFAULT")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_DEFAULT"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("READ_UNCOMMITTED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_READ_UNCOMMITTED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("READ_COMMITTED")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_READ_COMMITTED"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("REPEATABLE_READ")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_REPEATABLE_READ"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(",")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("SERIALIZABLE")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("TransactionDefinition")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("ISOLATION_SERIALIZABLE"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Isolation")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("int")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[a._v("value")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n        "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("return")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("this")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("value"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br"),n("span",{staticClass:"line-number"},[a._v("18")]),n("br"),n("span",{staticClass:"line-number"},[a._v("19")]),n("br"),n("span",{staticClass:"line-number"},[a._v("20")]),n("br"),n("span",{staticClass:"line-number"},[a._v("21")]),n("br"),n("span",{staticClass:"line-number"},[a._v("22")]),n("br"),n("span",{staticClass:"line-number"},[a._v("23")]),n("br")])]),n("ul",[n("li",[n("strong",[n("code",[a._v("TransactionDefinition.ISOLATION_DEFAULT")])]),a._v(" :使用后端数据库默认的隔离级别，MySQL 默认采用的 "),n("code",[a._v("REPEATABLE_READ")]),a._v(" 隔离级别 Oracle 默认采用的 "),n("code",[a._v("READ_COMMITTED")]),a._v(" 隔离级别.")]),a._v(" "),n("li",[n("strong",[n("code",[a._v("TransactionDefinition.ISOLATION_READ_UNCOMMITTED")])]),a._v(" :最低的隔离级别，使用这个隔离级别很少，因为它允许读取尚未提交的数据变更，"),n("strong",[a._v("可能会导致脏读、幻读或不可重复读")])]),a._v(" "),n("li",[n("strong",[n("code",[a._v("TransactionDefinition.ISOLATION_READ_COMMITTED")])]),a._v(" : 允许读取并发事务已经提交的数据，"),n("strong",[a._v("可以阻止脏读，但是幻读或不可重复读仍有可能发生")])]),a._v(" "),n("li",[n("strong",[n("code",[a._v("TransactionDefinition.ISOLATION_REPEATABLE_READ")])]),a._v(" : 对同一字段的多次读取结果都是一致的，除非数据是被本身事务自己所修改，"),n("strong",[a._v("可以阻止脏读和不可重复读，但幻读仍有可能发生。")])]),a._v(" "),n("li",[n("strong",[n("code",[a._v("TransactionDefinition.ISOLATION_SERIALIZABLE")])]),a._v(" : 最高的隔离级别，完全服从 ACID 的隔离级别。所有的事务依次逐个执行，这样事务之间就完全不可能产生干扰，也就是说，"),n("strong",[a._v("该级别可以防止脏读、不可重复读以及幻读")]),a._v("。但是这将严重影响程序的性能。通常情况下也不会用到该级别。")])]),a._v(" "),n("h3",{attrs:{id:"_7-4、-transactional-rollbackfor-exception-class-注解了解吗"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_7-4、-transactional-rollbackfor-exception-class-注解了解吗"}},[a._v("#")]),a._v(" 7.4、@Transactional(rollbackFor = Exception.class)注解了解吗？")]),a._v(" "),n("p",[n("code",[a._v("Exception")]),a._v(" 分为运行时异常 "),n("code",[a._v("RuntimeException")]),a._v(" 和非运行时异常。事务管理对于企业应用来说是至关重要的，即使出现异常情况，它也可以保证数据的一致性。")]),a._v(" "),n("p",[a._v("当 "),n("code",[a._v("@Transactional")]),a._v(" 注解作用于类上时，该类的所有 public 方法将都具有该类型的事务属性，同时，我们也可以在方法级别使用该标注来覆盖类级别的定义。如果类或者方法加了这个注解，那么这个类里面的方法抛出异常，就会回滚，数据库里面的数据也会回滚。")]),a._v(" "),n("p",[a._v("在 "),n("code",[a._v("@Transactional")]),a._v(" 注解中如果不配置"),n("code",[a._v("rollbackFor")]),a._v("属性,那么事务只会在遇到"),n("code",[a._v("RuntimeException")]),a._v("的时候才会回滚，加上 "),n("code",[a._v("rollbackFor=Exception.class")]),a._v(",可以让事务在遇到非运行时异常时也回滚。")]),a._v(" "),n("h2",{attrs:{id:"_8、jpa"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#_8、jpa"}},[a._v("#")]),a._v(" 8、JPA")]),a._v(" "),n("p",[a._v("如何使用JPA在数据库中非持久化一个字段？")]),a._v(" "),n("p",[a._v("假如有这么一个类：")]),a._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Entity")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"USER"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("public")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("class")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("User")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("{")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Id")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@GeneratedValue")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("strategy "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("GenerationType")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(".")]),a._v("AUTO"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Column")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"ID"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("Long")]),a._v(" id"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Column")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"USER_NAME"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" userName"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Column")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("(")]),a._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"PASSWORD"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(")")]),a._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" password"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("private")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" secrect"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v("\n\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("}")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br"),n("span",{staticClass:"line-number"},[a._v("6")]),n("br"),n("span",{staticClass:"line-number"},[a._v("7")]),n("br"),n("span",{staticClass:"line-number"},[a._v("8")]),n("br"),n("span",{staticClass:"line-number"},[a._v("9")]),n("br"),n("span",{staticClass:"line-number"},[a._v("10")]),n("br"),n("span",{staticClass:"line-number"},[a._v("11")]),n("br"),n("span",{staticClass:"line-number"},[a._v("12")]),n("br"),n("span",{staticClass:"line-number"},[a._v("13")]),n("br"),n("span",{staticClass:"line-number"},[a._v("14")]),n("br"),n("span",{staticClass:"line-number"},[a._v("15")]),n("br"),n("span",{staticClass:"line-number"},[a._v("16")]),n("br"),n("span",{staticClass:"line-number"},[a._v("17")]),n("br")])]),n("p",[a._v("如果想让"),n("code",[a._v("secrect")]),a._v(" 这个字段不被持久化，也就是不被数据库存储怎么办？可以采用下面几种方法：")]),a._v(" "),n("div",{staticClass:"language-java line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-java"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("static")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient1"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of static")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("final")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient2 "),n("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[a._v('"Satish"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of final")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("transient")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient3"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of transient")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[a._v("@Transient")]),a._v("\n"),n("span",{pre:!0,attrs:{class:"token class-name"}},[a._v("String")]),a._v(" transient4"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),n("span",{pre:!0,attrs:{class:"token comment"}},[a._v("// not persistent because of @Transient")]),a._v("\n")])]),a._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[a._v("1")]),n("br"),n("span",{staticClass:"line-number"},[a._v("2")]),n("br"),n("span",{staticClass:"line-number"},[a._v("3")]),n("br"),n("span",{staticClass:"line-number"},[a._v("4")]),n("br"),n("span",{staticClass:"line-number"},[a._v("5")]),n("br")])]),n("p",[a._v("后两种方法使用比较多。")])])}),[],!1,null,null,null);s.default=e.exports}}]);